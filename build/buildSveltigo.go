package build

import (
	"log"
	"os"
	"path/filepath"
	"regexp"
)

const sveltigoMiddlewareFile = `package build

import (
	"embed"

	"github.com/HazelnutParadise/sveltigo"
)

//go:embed */**
var fsys embed.FS

// Sveltigo is the main middleware to register to your router. It generated by the build step.
var Sveltigo = sveltigo.New(fsys)
`

func changeSveltigoMiddlewareFile(projectPath string) {
	// 從 golte.config.ts 中讀取 buildPath，用字串讀
	configFile, err := os.ReadFile(filepath.Join(projectPath, "golte.config.ts"))
	if err != nil {
		log.Fatalf("Failed to read golte.config.ts file: %v", err)
	}
	// 用正則表達式找到 outDir
	re := regexp.MustCompile(`outDir: "(.+)"`)
	buildPath := re.FindStringSubmatch(string(configFile))[1]
	// 尋找 embed.go 文件
	embedFilePath := filepath.Join(buildPath, "embed.go")
	if _, err := os.Stat(embedFilePath); os.IsNotExist(err) {
		log.Fatalf("Embed file not found: %v", err)
	}
	// 替代為 sveltigoMiddlewareFile 的內容
	content := sveltigoMiddlewareFile
	os.WriteFile(embedFilePath, []byte(content), 0644)
}
